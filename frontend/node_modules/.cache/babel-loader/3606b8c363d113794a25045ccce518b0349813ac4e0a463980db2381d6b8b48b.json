{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from '@reduxjs/toolkit';\n\n// Import slices\nimport authSlice from './slices/authSlice';\nimport cartSlice from './slices/cartSlice';\nimport restaurantSlice from './slices/restaurantSlice';\nimport orderSlice from './slices/orderSlice';\nimport userSlice from './slices/userSlice';\nimport uiSlice from './slices/uiSlice';\nconst persistConfig = {\n  key: 'foodie-express-root',\n  storage,\n  whitelist: ['auth', 'cart'],\n  // Only persist auth and cart data\n  blacklist: ['ui'] // Don't persist UI state\n};\nconst rootReducer = combineReducers({\n  auth: authSlice,\n  cart: cartSlice,\n  restaurants: restaurantSlice,\n  orders: orderSlice,\n  user: userSlice,\n  ui: uiSlice\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE']\n    }\n  }),\n  devTools: process.env.NODE_ENV !== 'production'\n});\nexport const persistor = persistStore(store);\n\n// Helper types for useSelector and useDispatch hooks\n// Usage: const dispatch = useDispatch(); const state = useSelector(state => state.auth);\nexport default store;","map":{"version":3,"names":["configureStore","persistStore","persistReducer","storage","combineReducers","authSlice","cartSlice","restaurantSlice","orderSlice","userSlice","uiSlice","persistConfig","key","whitelist","blacklist","rootReducer","auth","cart","restaurants","orders","user","ui","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","devTools","process","env","NODE_ENV","persistor"],"sources":["C:/Users/Venkat/Downloads/Food_delivery_app/frontend/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { combineReducers } from '@reduxjs/toolkit';\r\n\r\n// Import slices\r\nimport authSlice from './slices/authSlice';\r\nimport cartSlice from './slices/cartSlice';\r\nimport restaurantSlice from './slices/restaurantSlice';\r\nimport orderSlice from './slices/orderSlice';\r\nimport userSlice from './slices/userSlice';\r\nimport uiSlice from './slices/uiSlice';\r\n\r\nconst persistConfig = {\r\n  key: 'foodie-express-root',\r\n  storage,\r\n  whitelist: ['auth', 'cart'], // Only persist auth and cart data\r\n  blacklist: ['ui'], // Don't persist UI state\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authSlice,\r\n  cart: cartSlice,\r\n  restaurants: restaurantSlice,\r\n  orders: orderSlice,\r\n  user: userSlice,\r\n  ui: uiSlice,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE'],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// Helper types for useSelector and useDispatch hooks\r\n// Usage: const dispatch = useDispatch(); const state = useSelector(state => state.auth);\r\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,eAAe,QAAQ,kBAAkB;;AAElD;AACA,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,eAAe,MAAM,0BAA0B;AACtD,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,OAAO,MAAM,kBAAkB;AAEtC,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,qBAAqB;EAC1BT,OAAO;EACPU,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EAAE;EAC7BC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAE;AACrB,CAAC;AAED,MAAMC,WAAW,GAAGX,eAAe,CAAC;EAClCY,IAAI,EAAEX,SAAS;EACfY,IAAI,EAAEX,SAAS;EACfY,WAAW,EAAEX,eAAe;EAC5BY,MAAM,EAAEX,UAAU;EAClBY,IAAI,EAAEX,SAAS;EACfY,EAAE,EAAEX;AACN,CAAC,CAAC;AAEF,MAAMY,gBAAgB,GAAGpB,cAAc,CAACS,aAAa,EAAEI,WAAW,CAAC;AAEnE,OAAO,MAAMQ,KAAK,GAAGvB,cAAc,CAAC;EAClCwB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB,EAAE,mBAAmB;IACzD;EACF,CAAC,CAAC;EACJC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGhC,YAAY,CAACsB,KAAK,CAAC;;AAE5C;AACA;AACA,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}