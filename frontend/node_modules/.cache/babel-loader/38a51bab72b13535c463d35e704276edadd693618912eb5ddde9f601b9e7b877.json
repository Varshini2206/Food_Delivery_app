{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { authApi } from '../../services/api';\n\n// Async thunks\nexport const updateUserProfile = createAsyncThunk('auth/updateUserProfile', async (profileData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authApi.updateProfile(profileData);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to update profile');\n  }\n});\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  role: null // CUSTOMER, RESTAURANT_OWNER, DELIVERY_PARTNER, ADMIN\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.role = action.payload.user.role;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      state.role = null;\n      state.error = action.payload;\n    },\n    registerStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    registerSuccess: (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.role = action.payload.user.role;\n      state.error = null;\n    },\n    registerFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.role = null;\n      state.error = null;\n      state.isLoading = false;\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    updateProfile: (state, action) => {\n      state.user = {\n        ...state.user,\n        ...action.payload\n      };\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  registerStart,\n  registerSuccess,\n  registerFailure,\n  logout,\n  clearError,\n  updateProfile\n} = authSlice.actions;\nexport default authSlice.reducer;\n\n// Selectors\nexport const selectAuth = state => state.auth;\nexport const selectUser = state => state.auth.user;\nexport const selectToken = state => state.auth.token;\nexport const selectIsAuthenticated = state => state.auth.isAuthenticated;\nexport const selectUserRole = state => state.auth.role;\nexport const selectAuthLoading = state => state.auth.isLoading;\nexport const selectAuthError = state => state.auth.error;","map":{"version":3,"names":["createSlice","createAsyncThunk","authApi","updateUserProfile","profileData","rejectWithValue","response","updateProfile","data","error","_error$response","_error$response$data","message","initialState","user","token","isAuthenticated","isLoading","role","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","registerStart","registerSuccess","registerFailure","logout","clearError","actions","reducer","selectAuth","auth","selectUser","selectToken","selectIsAuthenticated","selectUserRole","selectAuthLoading","selectAuthError"],"sources":["C:/Users/Venkat/Downloads/Food_delivery_app/frontend/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { authApi } from '../../services/api';\r\n\r\n// Async thunks\r\nexport const updateUserProfile = createAsyncThunk(\r\n  'auth/updateUserProfile',\r\n  async (profileData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authApi.updateProfile(profileData);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || 'Failed to update profile');\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  error: null,\r\n  role: null, // CUSTOMER, RESTAURANT_OWNER, DELIVERY_PARTNER, ADMIN\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    loginStart: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    loginSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.isAuthenticated = true;\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.role = action.payload.user.role;\r\n      state.error = null;\r\n    },\r\n    loginFailure: (state, action) => {\r\n      state.isLoading = false;\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n      state.token = null;\r\n      state.role = null;\r\n      state.error = action.payload;\r\n    },\r\n    registerStart: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    registerSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.isAuthenticated = true;\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.role = action.payload.user.role;\r\n      state.error = null;\r\n    },\r\n    registerFailure: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      state.role = null;\r\n      state.error = null;\r\n      state.isLoading = false;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    updateProfile: (state, action) => {\r\n      state.user = { ...state.user, ...action.payload };\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  loginStart,\r\n  loginSuccess,\r\n  loginFailure,\r\n  registerStart,\r\n  registerSuccess,\r\n  registerFailure,\r\n  logout,\r\n  clearError,\r\n  updateProfile,\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n\r\n// Selectors\r\nexport const selectAuth = (state) => state.auth;\r\nexport const selectUser = (state) => state.auth.user;\r\nexport const selectToken = (state) => state.auth.token;\r\nexport const selectIsAuthenticated = (state) => state.auth.isAuthenticated;\r\nexport const selectUserRole = (state) => state.auth.role;\r\nexport const selectAuthLoading = (state) => state.auth.isLoading;\r\nexport const selectAuthError = (state) => state.auth.error;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}