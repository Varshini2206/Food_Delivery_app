{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { api } from '../../config/api';\nimport { STORAGE_KEYS } from '../../utils/constants';\n\n// Async thunks\nexport const updateUserProfile = createAsyncThunk('auth/updateProfile', async (profileData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.put('/auth/profile', profileData);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to update profile');\n  }\n});\n\n// Initialize from localStorage\nconst getInitialState = () => {\n  try {\n    const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\n    const userStr = localStorage.getItem(STORAGE_KEYS.USER);\n    const user = userStr ? JSON.parse(userStr) : null;\n    if (token && user) {\n      return {\n        user,\n        token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    }\n  } catch (error) {\n    console.error('Error loading auth state from localStorage:', error);\n  }\n  return {\n    user: null,\n    token: null,\n    isAuthenticated: false,\n    loading: false,\n    error: null\n  };\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: getInitialState(),\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      const {\n        user,\n        token\n      } = action.payload;\n      state.user = user;\n      state.token = token;\n      state.isAuthenticated = true;\n      state.loading = false;\n      state.error = null;\n\n      // Persist to localStorage\n      localStorage.setItem(STORAGE_KEYS.TOKEN, token);\n      localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify(user));\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n    },\n    setCredentials: (state, action) => {\n      const {\n        user,\n        token\n      } = action.payload;\n      state.user = user;\n      state.token = token;\n      state.isAuthenticated = true;\n      state.loading = false;\n      state.error = null;\n\n      // Persist to localStorage\n      localStorage.setItem(STORAGE_KEYS.TOKEN, token);\n      localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify(user));\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.loading = false;\n      state.error = null;\n\n      // Clear localStorage\n      localStorage.removeItem(STORAGE_KEYS.TOKEN);\n      localStorage.removeItem(STORAGE_KEYS.USER);\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    updateUser: (state, action) => {\n      state.user = {\n        ...state.user,\n        ...action.payload\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Update Profile\n    .addCase(updateUserProfile.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateUserProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = {\n        ...state.user,\n        ...action.payload\n      };\n      state.error = null;\n    }).addCase(updateUserProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  setCredentials,\n  logout,\n  setLoading,\n  setError,\n  clearError,\n  updateUser\n} = authSlice.actions;\n\n// Selectors\nexport const selectIsAuthenticated = state => state.auth.isAuthenticated;\nexport const selectUser = state => state.auth.user;\nexport const selectUserRole = state => {\n  var _state$auth$user;\n  return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user.role;\n};\nexport const selectAuthLoading = state => state.auth.loading;\nexport const selectAuthError = state => state.auth.error;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","STORAGE_KEYS","updateUserProfile","profileData","rejectWithValue","response","put","data","error","_error$response","_error$response$data","message","getInitialState","token","localStorage","getItem","TOKEN","userStr","USER","user","JSON","parse","isAuthenticated","loading","console","authSlice","name","initialState","reducers","loginStart","state","loginSuccess","action","payload","setItem","stringify","loginFailure","setCredentials","logout","removeItem","setLoading","setError","clearError","updateUser","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","selectIsAuthenticated","auth","selectUser","selectUserRole","_state$auth$user","role","selectAuthLoading","selectAuthError","reducer"],"sources":["C:/Users/Venkat/Downloads/Food_delivery_app/frontend/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { api } from '../../config/api';\r\nimport { STORAGE_KEYS } from '../../utils/constants';\r\n\r\n// Async thunks\r\nexport const updateUserProfile = createAsyncThunk(\r\n  'auth/updateProfile',\r\n  async (profileData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await api.put('/auth/profile', profileData);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || 'Failed to update profile');\r\n    }\r\n  }\r\n);\r\n\r\n// Initialize from localStorage\r\nconst getInitialState = () => {\r\n  try {\r\n    const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\r\n    const userStr = localStorage.getItem(STORAGE_KEYS.USER);\r\n    const user = userStr ? JSON.parse(userStr) : null;\r\n    \r\n    if (token && user) {\r\n      return {\r\n        user,\r\n        token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading auth state from localStorage:', error);\r\n  }\r\n  \r\n  return {\r\n    user: null,\r\n    token: null,\r\n    isAuthenticated: false,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: getInitialState(),\r\n  reducers: {\r\n    loginStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    loginSuccess: (state, action) => {\r\n      const { user, token } = action.payload;\r\n      state.user = user;\r\n      state.token = token;\r\n      state.isAuthenticated = true;\r\n      state.loading = false;\r\n      state.error = null;\r\n      \r\n      // Persist to localStorage\r\n      localStorage.setItem(STORAGE_KEYS.TOKEN, token);\r\n      localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify(user));\r\n    },\r\n    loginFailure: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n      state.isAuthenticated = false;\r\n    },\r\n    setCredentials: (state, action) => {\r\n      const { user, token } = action.payload;\r\n      state.user = user;\r\n      state.token = token;\r\n      state.isAuthenticated = true;\r\n      state.loading = false;\r\n      state.error = null;\r\n      \r\n      // Persist to localStorage\r\n      localStorage.setItem(STORAGE_KEYS.TOKEN, token);\r\n      localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify(user));\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      state.loading = false;\r\n      state.error = null;\r\n      \r\n      // Clear localStorage\r\n      localStorage.removeItem(STORAGE_KEYS.TOKEN);\r\n      localStorage.removeItem(STORAGE_KEYS.USER);\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    updateUser: (state, action) => {\r\n      state.user = { ...state.user, ...action.payload };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Update Profile\r\n      .addCase(updateUserProfile.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateUserProfile.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = { ...state.user, ...action.payload };\r\n        state.error = null;\r\n      })\r\n      .addCase(updateUserProfile.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { \r\n  loginStart,\r\n  loginSuccess,\r\n  loginFailure,\r\n  setCredentials, \r\n  logout, \r\n  setLoading, \r\n  setError, \r\n  clearError, \r\n  updateUser \r\n} = authSlice.actions;\r\n\r\n// Selectors\r\nexport const selectIsAuthenticated = (state) => state.auth.isAuthenticated;\r\nexport const selectUser = (state) => state.auth.user;\r\nexport const selectUserRole = (state) => state.auth.user?.role;\r\nexport const selectAuthLoading = (state) => state.auth.loading;\r\nexport const selectAuthError = (state) => state.auth.error;\r\n\r\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}