{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL, DEFAULT_HEADERS, REQUEST_TIMEOUT, STORAGE_KEYS } from '../utils/constants';\n\n// Create axios instance with base configuration\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: REQUEST_TIMEOUT,\n  headers: DEFAULT_HEADERS\n});\n\n// Request interceptor to add auth token\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Unauthorized - clear token and redirect to login\n    localStorage.removeItem(STORAGE_KEYS.TOKEN);\n    localStorage.removeItem(STORAGE_KEYS.USER);\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API methods\nexport const api = {\n  // Generic HTTP methods\n  get: (url, config = {}) => apiClient.get(url, config),\n  post: (url, data = {}, config = {}) => apiClient.post(url, data, config),\n  put: (url, data = {}, config = {}) => apiClient.put(url, data, config),\n  patch: (url, data = {}, config = {}) => apiClient.patch(url, data, config),\n  delete: (url, config = {}) => apiClient.delete(url, config),\n  // File upload method\n  upload: (url, formData, onUploadProgress) => {\n    return apiClient.post(url, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      onUploadProgress\n    });\n  }\n};\n\n// HTTP client reference for legacy code\nexport const httpClient = apiClient;\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","DEFAULT_HEADERS","REQUEST_TIMEOUT","STORAGE_KEYS","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","TOKEN","Authorization","error","Promise","reject","response","_error$response","status","removeItem","USER","window","location","href","api","get","url","post","data","put","patch","delete","upload","formData","onUploadProgress","httpClient"],"sources":["C:/Users/Venkat/Downloads/Food_delivery_app/frontend/src/config/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { API_BASE_URL, DEFAULT_HEADERS, REQUEST_TIMEOUT, STORAGE_KEYS } from '../utils/constants';\r\n\r\n// Create axios instance with base configuration\r\nconst apiClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: REQUEST_TIMEOUT,\r\n  headers: DEFAULT_HEADERS\r\n});\r\n\r\n// Request interceptor to add auth token\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Unauthorized - clear token and redirect to login\r\n      localStorage.removeItem(STORAGE_KEYS.TOKEN);\r\n      localStorage.removeItem(STORAGE_KEYS.USER);\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API methods\r\nexport const api = {\r\n  // Generic HTTP methods\r\n  get: (url, config = {}) => apiClient.get(url, config),\r\n  post: (url, data = {}, config = {}) => apiClient.post(url, data, config),\r\n  put: (url, data = {}, config = {}) => apiClient.put(url, data, config),\r\n  patch: (url, data = {}, config = {}) => apiClient.patch(url, data, config),\r\n  delete: (url, config = {}) => apiClient.delete(url, config),\r\n  \r\n  // File upload method\r\n  upload: (url, formData, onUploadProgress) => {\r\n    return apiClient.post(url, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n      onUploadProgress,\r\n    });\r\n  }\r\n};\r\n\r\n// HTTP client reference for legacy code\r\nexport const httpClient = apiClient;\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,eAAe,EAAEC,eAAe,EAAEC,YAAY,QAAQ,oBAAoB;;AAEjG;AACA,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC7BC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAEL,eAAe;EACxBM,OAAO,EAAEP;AACX,CAAC,CAAC;;AAEF;AACAG,SAAS,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACZ,YAAY,CAACa,KAAK,CAAC;EACtD,IAAIH,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACS,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAd,SAAS,CAACK,YAAY,CAACY,QAAQ,CAACV,GAAG,CAChCU,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAT,YAAY,CAACU,UAAU,CAACrB,YAAY,CAACa,KAAK,CAAC;IAC3CF,YAAY,CAACU,UAAU,CAACrB,YAAY,CAACsB,IAAI,CAAC;IAC1CC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMW,GAAG,GAAG;EACjB;EACAC,GAAG,EAAEA,CAACC,GAAG,EAAEnB,MAAM,GAAG,CAAC,CAAC,KAAKR,SAAS,CAAC0B,GAAG,CAACC,GAAG,EAAEnB,MAAM,CAAC;EACrDoB,IAAI,EAAEA,CAACD,GAAG,EAAEE,IAAI,GAAG,CAAC,CAAC,EAAErB,MAAM,GAAG,CAAC,CAAC,KAAKR,SAAS,CAAC4B,IAAI,CAACD,GAAG,EAAEE,IAAI,EAAErB,MAAM,CAAC;EACxEsB,GAAG,EAAEA,CAACH,GAAG,EAAEE,IAAI,GAAG,CAAC,CAAC,EAAErB,MAAM,GAAG,CAAC,CAAC,KAAKR,SAAS,CAAC8B,GAAG,CAACH,GAAG,EAAEE,IAAI,EAAErB,MAAM,CAAC;EACtEuB,KAAK,EAAEA,CAACJ,GAAG,EAAEE,IAAI,GAAG,CAAC,CAAC,EAAErB,MAAM,GAAG,CAAC,CAAC,KAAKR,SAAS,CAAC+B,KAAK,CAACJ,GAAG,EAAEE,IAAI,EAAErB,MAAM,CAAC;EAC1EwB,MAAM,EAAEA,CAACL,GAAG,EAAEnB,MAAM,GAAG,CAAC,CAAC,KAAKR,SAAS,CAACgC,MAAM,CAACL,GAAG,EAAEnB,MAAM,CAAC;EAE3D;EACAyB,MAAM,EAAEA,CAACN,GAAG,EAAEO,QAAQ,EAAEC,gBAAgB,KAAK;IAC3C,OAAOnC,SAAS,CAAC4B,IAAI,CAACD,GAAG,EAAEO,QAAQ,EAAE;MACnC9B,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACD+B;IACF,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAGpC,SAAS;AAEnC,eAAeyB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}